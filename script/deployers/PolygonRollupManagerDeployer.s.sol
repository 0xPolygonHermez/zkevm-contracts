// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

////////////////////////////////////////////////////
// AUTOGENERATED - DO NOT EDIT THIS FILE DIRECTLY //
////////////////////////////////////////////////////

import "forge-std/Script.sol";

import "contracts/PolygonRollupManager.sol";

abstract contract PolygonRollupManagerDeployer is Script {
    PolygonRollupManager internal polygonRollupManager;

    function deployPolygonRollupManagerImplementation(
        IPolygonZkEVMGlobalExitRootV2 _globalExitRootManager,
        IERC20Upgradeable _pol,
        IPolygonZkEVMBridge _bridgeAddress
    ) internal returns (address implementation) {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        implementation = address(
            new PolygonRollupManager(
                _globalExitRootManager,
                _pol,
                _bridgeAddress
            )
        );
        vm.stopBroadcast();
    }
}
