// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

////////////////////////////////////////////////////
// AUTOGENERATED - DO NOT EDIT THIS FILE DIRECTLY //
////////////////////////////////////////////////////

import "forge-std/Script.sol";

import "contracts/PolygonZkEVMTimelock.sol";

abstract contract PolygonZkEVMTimelockDeployer is Script {
    function deployPolygonZkEVMTimelockImplementation(
        uint256 minDelay,
        address[] memory proposers,
        address[] memory executors,
        address admin,
        PolygonZkEVM _polygonZkEVM
    ) internal returns (address implementation) {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        implementation = address(
            new PolygonZkEVMTimelock(
                minDelay,
                proposers,
                executors,
                admin,
                _polygonZkEVM
            )
        );
        vm.stopBroadcast();
    }
}
