// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

////////////////////////////////////////////////////
// AUTOGENERATED - DO NOT EDIT THIS FILE DIRECTLY //
////////////////////////////////////////////////////

import "forge-std/Script.sol";

import "contracts/PolygonZkEVMGlobalExitRootV2.sol";
import {ProxyAdmin} from "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol";
import {TransparentUpgradeableProxy, ITransparentUpgradeableProxy} from "@openzeppelin/contracts5/proxy/transparent/TransparentUpgradeableProxy.sol";

abstract contract PolygonZkEVMGlobalExitRootV2Deployer is Script {
    PolygonZkEVMGlobalExitRootV2 internal polygonZkEVMGlobalExitRootV2;
    ProxyAdmin internal polygonZkEVMGlobalExitRootV2ProxyAdmin;
    address internal polygonZkEVMGlobalExitRootV2Implementation;

    function deployPolygonZkEVMGlobalExitRootV2Transparent(
        address proxyAdminOwner,
        address _rollupManager,
        address _bridgeAddress
    )
        internal
        returns (address implementation, address proxyAdmin, address proxy)
    {
        bytes memory initData = abi.encodeCall(
            PolygonZkEVMGlobalExitRootV2.initialize,
            ()
        );

        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));

        polygonZkEVMGlobalExitRootV2Implementation = address(
            new PolygonZkEVMGlobalExitRootV2(_rollupManager, _bridgeAddress)
        );
        polygonZkEVMGlobalExitRootV2 = PolygonZkEVMGlobalExitRootV2(
            address(
                new TransparentUpgradeableProxy(
                    polygonZkEVMGlobalExitRootV2Implementation,
                    proxyAdminOwner,
                    initData
                )
            )
        );

        vm.stopBroadcast();

        polygonZkEVMGlobalExitRootV2ProxyAdmin = ProxyAdmin(
            address(
                uint160(
                    uint256(
                        vm.load(
                            address(polygonZkEVMGlobalExitRootV2),
                            hex"b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                        )
                    )
                )
            )
        );

        return (
            polygonZkEVMGlobalExitRootV2Implementation,
            address(polygonZkEVMGlobalExitRootV2ProxyAdmin),
            address(polygonZkEVMGlobalExitRootV2)
        );
    }

    function deployPolygonZkEVMGlobalExitRootV2Implementation(
        address _rollupManager,
        address _bridgeAddress
    ) internal returns (address implementation) {
        vm.startBroadcast(vm.envUint("PRIVATE_KEY"));
        implementation = address(
            new PolygonZkEVMGlobalExitRootV2(_rollupManager, _bridgeAddress)
        );
        vm.stopBroadcast();
    }
}
